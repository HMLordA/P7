#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass report
\begin_preamble
\usepackage[english]{babel}
\usepackage{amsfonts}
% Bonus
\usepackage{dsfont}


\newtheorem{theorem}{}

\title{Option on a Levy process}
\author{Jean-Christophe DIETRICH and Nazar KOSTYUCHYK}
\end_preamble
\use_default_options false
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding iso8859-1
\fontencoding default
\font_roman default
\font_sans default
\font_typewriter default
\font_math auto
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize 10
\spacing single
\use_hyperref false
\papersize a4paper
\use_geometry false
\use_package amsmath 2
\use_package amssymb 2
\use_package cancel 0
\use_package esint 1
\use_package mathdots 0
\use_package mathtools 2
\use_package mhchem 0
\use_package stackrel 0
\use_package stmaryrd 0
\use_package undertilde 0
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date true
\justification true
\use_refstyle 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Section
Introduction
\end_layout

\begin_layout Subsection
Motivation
\end_layout

\begin_layout Standard
It is well known that the constant volatility Black-Scholes model cannot
 account for the “volatility smile” which is observed in market prices for
 contingent claims.
 One widely used method to account for the smile effect is to assume that
 the volatility is deterministic, but a function of asset price and time.
 This local volatility function is then determined by calibration to market
 prices (Dupire, 1994; Coleman et al., 1999; Andersen and Brotherton-Ratclie,
 1998).
 This approach has been criticized because of overfitting and non-stationarity
 of parameters.
\end_layout

\begin_layout Standard
There is increasing empirical evidence that the usual assumption of geometric
 Brownian motion should be augmented by discontinous jump processes (Eraker
 et al., 2003).
 Such models were originally introduced in the option valuation context
 by Merton (1976).
 It is also possible to develop more complex valuation models which include
 stochastic volatility as well as jumps (Bates, 1996; Scott, 1997; Bakshi
 et al., 1997).
\end_layout

\begin_layout Standard
Andersen and Andreasen (2000) have staked out a middle ground by combining
 the deterministic volatility approach with lognormally distributed Poisson
 jumps with constant parameters.
 They argue that this alleviates many of the concerns, noting that “by letting
 the jump-part of the process dynamics explain a significant part of the
 volatility smile/skew, we generally obtain a ‘reasonable’, stable [deterministi
c volatility] function, without the extreme short-term variation typical
 of the pure diffusion approach” (Andersen and Andreasen, 2000, p.
 233).
\end_layout

\begin_layout Standard
However, most of the existing methods for pricing options under jump processes
 are confined to vanilla European options.
 There has been very little work on numerical methods for pricing exotic
 or path-dependent options of practical significance (e.g.
 discretely observed barrier, lookback, and Asian options).
 Numerical techniques are also required when jumps are combined with non-constan
t local volatilities to calibrate models to observed prices of European
 options, as in the model of Andersen and Andreasen (2000).
\end_layout

\begin_layout Standard
In general, the valuation of a contingent claim under a jump diffusion process
 requires solving a partial integro-differential equation (PIDE).
 The method suggested by Amin (1993) is an explicit type approach based
 on multinomial trees.
 As is well-known, such methods have timestep lim- itations due to stability
 considerations, and are generally only first order correct.
 Zhang (1997) develops a method which treats the jump integral term in explicit
 fashion, and the remaining terms in the PIDE implicitly.
 Unfortunately, rather restrictive stability conditions are required.
 Meyer (1998) uses the method of lines to value American options where the
 underlying asset can jump to a finite number of states.
 More recently, a method based on use of a wavelet transform has been suggested
 by Matache et al.
 (2002).
 The basic idea is to use a wavelet transform to approximate the dense matrix
 discrete integral operator by dropping small terms.
 Andersen and Andreasen (2000) use an operator splitting type of approach
 combined with a fast Fourier transform (FFT) evalua- tion of a convolution
 integral to price European options with jump diffusion, where the diffusion
 terms involve non-constant local volatilities.
 However, an operator splitting approach cannot easily handle American options
 or nonlinear option valuation models (e.g.
 transaction costs or uncertain parameters, as discussed in Wilmott (1998)
 and references provided there).
\end_layout

\begin_layout Standard
\begin_inset Note Comment
status open

\begin_layout Plain Layout
The objective of this project is to implement robust numerical methods for
 solving the option pricing PIDE which results from a jump diffusion model.
 This work closely follows Forsyth et al., paper "Robust numerical methods
 for contingent claims under jump diffusion processes".
 Notice that we aim to implement Forsyth's numerical method without using
 a grid's linear interpolation and FFT methods.
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Problem presentation
\end_layout

\begin_layout Standard
This section presents the model for the evolution of the price of the underlying
 asset and the general form of the PIDE to be solved for option valuation.
 Let S represent the underlying stock price.
 Movements in this variable over time are assumed to be described by a jump
 diffusion process of the form : 
\begin_inset Formula 
\begin{eqnarray}
\frac{dS}{S}=\nu{dt}+\sigma{dz}+(\eta-1){dq}
\end{eqnarray}

\end_inset


\end_layout

\begin_layout Standard
Where 
\begin_inset Formula $\nu$
\end_inset

 is the drift rate, 
\begin_inset Formula $\sigma$
\end_inset

 is the volatility associated with the continuous (Brownian) component of
 the process, 
\begin_inset Formula $dz$
\end_inset

 is the increment of a Gauss-Wiener process, 
\begin_inset Formula $dq$
\end_inset

 is a Poisson process which is assumed to be independent of the Brownian
 part (note that 
\begin_inset Formula $dq=0$
\end_inset

 with probability 
\begin_inset Formula $1-\lambda{dt}$
\end_inset

 and 
\begin_inset Formula $dq=1$
\end_inset

 with probability 
\begin_inset Formula $\lambda{dt}$
\end_inset

, where 
\begin_inset Formula $\lambda$
\end_inset

 is the Poisson arrival intensity), and 
\begin_inset Formula $\eta-1$
\end_inset

 is an impulse function producing a jump from S to 
\begin_inset Formula ${S}\eta$
\end_inset

.
 We denote the expected relative jump size by 
\begin_inset Formula $\kappa=\mathop{\mathbb{E}}(\eta-1)$
\end_inset

.
\end_layout

\begin_layout Standard
Under equation (1), the stock price 
\begin_inset Formula $S$
\end_inset

 has two sources of uncertainty.
 The term 
\begin_inset Formula $\sigma{dz}$
\end_inset

 corresponds to normal levels of uncertainty while the term dq describes
 exceptional events.
 If the Poisson event does not occur (
\begin_inset Formula $dq=0$
\end_inset

), then equation (1) is equivalent to the usual stochastic process of geometric
 Brownian motion assumed in the Black-Scholes model (with the additional
 assumption that 
\begin_inset Formula $\sigma$
\end_inset

 is constant).
 If, on the other hand, the Poisson event occurs, then equation (1) can
 be written as : 
\begin_inset Formula 
\begin{eqnarray}
\frac{dS}{S}\simeq(\eta-1),
\end{eqnarray}

\end_inset


\end_layout

\begin_layout Standard
where 
\begin_inset Formula $\eta-1$
\end_inset

 is an impulse function producing a jump from 
\begin_inset Formula $S$
\end_inset

 to 
\begin_inset Formula $S\eta$
\end_inset

.
 Consequently, the resulting sample path for the stock 
\begin_inset Formula $S$
\end_inset

 will be continuous most of the time with finite negative or positive jumps
 with various amplitudes occurring at discrete points in time.
\end_layout

\begin_layout Standard
Let 
\begin_inset Formula $V(S,t)$
\end_inset

 be the value of a contingent claim that depends on the underlying stock
 price 
\begin_inset Formula $S$
\end_inset

 and time t.
 As is well-known, the following backward PIDE may be solved to determine
 V :
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\left\{ \begin{array}{l}
-\frac{\partial V}{\partial t}-\frac{\sigma^{2}}{2}S^{2}\frac{\partial^{2}V}{\partial S^{2}}-(r-\lambda\kappa)S\frac{\partial V}{\partial S}+rV+L(V)=0\qquad S>0,\quad t\in[0,T]\\
V(T,S)=\varphi(S)
\end{array}\right.
\]

\end_inset


\end_layout

\begin_layout Standard
where 
\begin_inset Formula $V\rightarrow L(V)$
\end_inset

 is an linear operator described as follows:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray}
L(V(S))=\lambda\left(V(S)-\int_{0}^{+\infty}V(S\eta)g(\eta)\,d\eta\right)
\end{eqnarray}

\end_inset


\end_layout

\begin_layout Standard
where 
\begin_inset Formula $t$
\end_inset

 is the time, 
\begin_inset Formula $r$
\end_inset

 is the continuously compounded risk free interest rate, and 
\begin_inset Formula $g(\eta)$
\end_inset

 is the probability density function of the jump amplitude 
\begin_inset Formula $\eta$
\end_inset

 with the obvious properties that 
\begin_inset Formula $\forall\eta$
\end_inset

, 
\begin_inset Formula $g(\eta)>0$
\end_inset

 and 
\begin_inset Formula $\int_{0}^{+\infty}g(\eta)\,d\eta=1$
\end_inset

.
 An important special case is where 
\begin_inset Formula $\sigma$
\end_inset

 is constant and the jump size distribution is lognormal, this being the
 well-known model of Merton (1976).
\end_layout

\begin_layout Standard
\begin_inset VSpace medskip
\end_inset


\end_layout

\begin_layout Subsection
Bondary Condition
\end_layout

\begin_layout Standard
\begin_inset VSpace medskip
\end_inset


\end_layout

\begin_layout Subsection
Variable change
\end_layout

\begin_layout Standard
We would work on the interval 
\begin_inset Formula $[Smin,Smax]$
\end_inset

 with condition 
\begin_inset Formula $Smin>0$
\end_inset

.
 We are applying the logarithmic variable change 
\begin_inset Formula $S=Ke^{x}$
\end_inset

 (which also could be seen as 
\begin_inset Formula $x=log(\frac{S}{K})$
\end_inset

) and the time reversal variable change 
\begin_inset Formula $t=T-t$
\end_inset

.
\end_layout

\begin_layout Standard
Let's concider 
\begin_inset Formula $u(t,x)=V(t,S)=V(T-t,Ke^{x})$
\end_inset

.
 This change of varibale implies : 
\begin_inset Formula 
\begin{eqnarray*}
-\frac{\partial u}{\partial t}(t,x) & = & \frac{\partial V}{\partial t}(t,S)\\
\frac{\partial u}{\partial x}(t,x) & = & S\frac{\partial V}{\partial S}(t,S)\\
\frac{\partial^{2}u}{\partial x^{2}}(t,x)-\frac{\partial u}{\partial x}(t,x) & = & S^{2}\frac{\partial^{2}V}{\partial S^{2}}(t,S)
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Standard
At the same time we concider 
\begin_inset Formula $\eta=e^{y}$
\end_inset

.
 This change of variable aims to simplify integral terms and facilitate
 it's approximation (see the following section): 
\begin_inset Formula 
\begin{eqnarray*}
\ S\eta & = & Ke^{x+y}\\
\ d\eta & = & e^{y}dy\\
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Standard
After this logarithmic change of variable, our final PDE becomes : 
\begin_inset Formula 
\[
\left\{ \begin{array}{l}
\frac{\partial u}{\partial t}(t,x)-\frac{\sigma^{2}}{2}\frac{\partial^{2}u}{\partial x^{2}}(t,x)-(r-\lambda\kappa-\frac{\sigma^{2}}{2})\frac{\partial u}{\partial x}(t,x)+(r+\lambda)u(t,x)-\lambda L'(u(t,x))=0\qquad x\in\mathbb{R},\quad t\in[0,T]\\
ug(t,x)=a(t)Ke^{x}+b(t)\qquad\forall x\leq Xmin=log(\frac{Smin}{K})\\
ud(t,x)=0\qquad\forall x\geq Xmax=log(\frac{Smax}{K})\\
u(0,x)=\varphi(S)=\varphi(Ke^{x})
\end{array}\right.
\]

\end_inset


\end_layout

\begin_layout Standard
where 
\begin_inset Formula $u\rightarrow L'(u(t,x))$
\end_inset

 is an linear operator described as follows: 
\begin_inset Formula 
\begin{eqnarray*}
L'(u(t,x))=\int_{-\infty}^{+\infty}u(t,x+y)g(e^{y})e^{y}\,dy
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace medskip
\end_inset


\end_layout

\begin_layout Subsection
Intergral approximation
\end_layout

\begin_layout Standard
This section aims to present the approximation of the integral term 
\begin_inset Formula $L'(u)$
\end_inset

, but firstly we'll define the spaced and temporary grids that we would
 use:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\left\{ \begin{array}{l}
T:\ is\ a\ maturity\ of\ the\ contract\quad and\quad N:\ is\ the\ number\ of\ time\ steps\\
\tau=\frac{T}{N}\\
t_{n}\ =n\tau\quad n\in[0,N+1]\quad such\ as\quad t_{0}=0\quad and\quad t_{N+1}=T
\end{array}\right.
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\left\{ \begin{array}{l}
Xmax=log(\frac{Smax}{K})\quad and\quad Xmin=log(\frac{Smin}{K})\quad and\quad I:\ is\ the\ number\ of\ space\ steps\\
h=\frac{Xmax-Xmin}{I+1}\\
x_{j}\ =Xmin+jh\quad j\in[0,I+1]\quad such\ as\quad x_{0}=Xmin\quad and\quad x_{I+1}=Xmax
\end{array}\right.
\]

\end_inset


\end_layout

\begin_layout Standard
Now we are ready to realise our intergral approximation.
 We would approach the integral by 
\begin_inset Formula $2P+I$
\end_inset

 terms
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray*}
L'(u(t,x))=\int_{-\infty}^{+\infty}u(t,x_{i}+y)g(e^{y})e^{y}\,dy\simeq\Delta y\sum_{j=-P-i+1}^{P+I-i}u(t,x_{i+j})g(e^{x_{j}})e^{x_{j}}
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace medskip
\end_inset


\end_layout

\begin_layout Subsection
Explicit Euler's Discretization Scheme
\end_layout

\begin_layout Standard
The intergral approximation, temporaly and spaces grids allow us to define
 the Explicit Euler's Discretization Scheme (with the convention 
\begin_inset Formula $u(t_{n},x_{i})=u_{i}^{n}$
\end_inset

) as follows:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray*}
\frac{u_{i}^{n+1}-u_{i}^{n}}{\tau}-\frac{\sigma^{2}}{2}\left(\frac{u_{i+1}^{n}-2u_{i}^{n}+u_{i-1}^{n}}{h^{2}}\right)-\left(r-\lambda\kappa-\frac{\sigma^{2}}{2}\right)\left(\frac{u_{i+1}^{n}-u_{i-1}^{n}}{2h}\right)+(r+\lambda)u_{i}^{n}-h\lambda\sum_{j=-P-i+1}^{P+I-i}u_{i+j}^{n}g(e^{x_{j}})e^{x_{j}}=0
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Standard
In order to make this problem easier to resolve and for better overall visibilit
y we adopt the following matrix expression of our Euler's scheme:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray*}
\frac{U^{n+1}-U^{n}}{\tau}+(A+G)U^{n}+q_{n}+T_{UG}^{n,i}+T_{UD}^{n,i}=0
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Standard
where we can easily identify the following matrix terms
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
A=\begin{pmatrix}\frac{\sigma^{2}}{h^{2}}+(r+\lambda) & -\frac{\sigma^{2}}{2h^{2}}-\frac{\left(r-\lambda\kappa-\frac{\sigma^{2}}{2}\right)}{2h} & \cdots & \cdots & 0\\
-\frac{\sigma^{2}}{2h^{2}}+\frac{\left(r-\lambda\kappa-\frac{\sigma^{2}}{2}\right)}{2h} & \ddots & \ddots &  & \vdots\\
\\
\vdots &  &  &  & \vdots\\
\vdots & \ddots & \ddots & \ddots & \vdots\\
\vdots &  &  &  & \vdots\\
\\
\vdots &  & \ddots & \ddots & -\frac{\sigma^{2}}{2h^{2}}-\frac{\left(r-\lambda\kappa-\frac{\sigma^{2}}{2}\right)}{2h}\\
0 & \cdots & \cdots & -\frac{\sigma^{2}}{2h^{2}}+\frac{\left(r-\lambda\kappa-\frac{\sigma^{2}}{2}\right)}{2h} & \frac{\sigma^{2}}{h^{2}}+(r+\lambda)
\end{pmatrix}
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
G=-\lambda h\begin{pmatrix}g(e^{x_{0}})e^{x_{0}} & g(e^{x_{1}})e^{x_{1}} & \cdots & \cdots & g(e^{x_{I-1}})e^{x_{I-1}}\\
g(e^{x_{-1}})e^{x_{-1}} & \ddots & \ddots &  & \vdots\\
\\
\vdots &  &  &  & \vdots\\
\vdots & \ddots & \ddots & \ddots & \vdots\\
\vdots &  &  &  & \vdots\\
\\
\vdots &  & \ddots & \ddots & g(e^{x_{1}})e^{x_{1}}\\
g(e^{x_{1-I}})e^{x_{1-I}} & \cdots & \cdots & g(e^{x_{-1}})e^{x_{-1}} & g(e^{x_{0}})e^{x_{0}}
\end{pmatrix}
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
q_{n}=\begin{pmatrix}\left(-\frac{\sigma^{2}}{2h^{2}}+\frac{\left(r-\lambda\kappa-\frac{\sigma^{2}}{2}\right)}{2h}\right)U_{g}^{n}\\
0\\
\vdots\\
0\\
\left(-\frac{\sigma^{2}}{2h^{2}}-\frac{\left(r-\lambda\kappa-\frac{\sigma^{2}}{2}\right)}{2h}\right)U_{d}^{n}
\end{pmatrix}
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\left\{ \begin{array}{l}
T_{UG}^{n,i}=-h\lambda U_{g}^{n}\sum_{j=-P-i+1}^{-i}g(e^{x_{j}})e^{x_{j}}\\
T_{UD}^{n,i}=-h\lambda U_{d}^{n}\sum_{j=I-i+1}^{P+I-i}g(e^{x_{j}})e^{x_{j}}
\end{array}\right.
\]

\end_inset


\end_layout

\begin_layout Standard
In order to resolve our Explicit Euler's Scheme we use the following equation:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray*}
U^{n+1}=(Id-\tau(A+G))U^{n}-\tau q_{n}-\tau T_{UG}^{n,i}-\tau T_{UD}^{n,i}
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace medskip
\end_inset


\end_layout

\begin_layout Subsection
The Merton's Exact Formula
\end_layout

\begin_layout Standard
In this sections we will compare our results obtained in the precedent section
 (using Explicit Euler's Discretization Scheme) with results obtained using
 The Merton's Exact Formula.
\end_layout

\begin_layout Standard
We begin by recalling the Merton's formula: for 
\begin_inset Formula $t<T$
\end_inset

 and 
\begin_inset Formula $\tau=T-t$
\end_inset

, with 
\begin_inset Formula $r_{n}=r-\lambda(e^{\mu+\frac{\gamma^{2}}{2}}-1)+n\frac{\mu}{t},\sigma_{n}=\sqrt{\sigma^{2}+n\frac{\gamma^{2}}{t}},s_{n}=se^{n\frac{\gamma^{2}}{2}},\kappa=\mathop{\mathbb{E}}(\eta-1)=e^{\mu+\frac{\gamma^{2}}{2}}-1,$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray*}
%\label{eq:lcp}
P_{Merton}(t,s)=r^{-r\tau}\sum_{n\geq0}^{}e^{-\lambda\tau}\frac{(\lambda\tau)^{n}}{n!}e^{r_{n}\tau}BS(t,s_{n},K,r_{n},\sigma_{n})
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Standard
and where 
\begin_inset Formula $BS(t,S,K,r,\sigma)$
\end_inset

 is a Black & Scholes formula with the reversed time 
\begin_inset Formula $t\mapsto T-t$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset VSpace medskip
\end_inset


\end_layout

\begin_layout Subsection
Crank-Nicolson Discretization Scheme
\end_layout

\begin_layout Standard
The Explicit Euler's Discretization Scheme used in the section () is only
 first order correct in the time direction.
 In order to improve the timestepping error, we can use a Crank-Nicolson
 method.
 Such an approach results in the following set of discrete equations
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray*}
\frac{U^{n+1}-U^{n}}{\tau}+\frac{((A+G)U^{n+1}+q_{n+1})+((A+G)U^{n}+q_{n})+(T_{UG}^{n+1,i}+T_{UG}^{n,i})+(T_{UD}^{n+1,i}+T_{UD}^{n,i})}{2}=0
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray*}
\frac{U^{n+1}-U^{n}}{\tau}+(A+G)\frac{(U^{n+1}+U^{n})}{2}+q_{n+\frac{1}{2}}+T_{UG}^{n+\frac{1}{2},i}+T_{UD}^{n+\frac{1}{2},i}=0
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Standard
where we can easily identify the following matrix terms :
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
q_{n}=\begin{pmatrix}\left(-\frac{\sigma^{2}}{2h^{2}}+\frac{\left(r-\lambda\kappa-\frac{\sigma^{2}}{2}\right)}{2h}\right)\left(\frac{U_{g}^{n+1}+U_{g}^{n}}{2}\right)\\
0\\
\vdots\\
0\\
\left(-\frac{\sigma^{2}}{2h^{2}}-\frac{\left(r-\lambda\kappa-\frac{\sigma^{2}}{2}\right)}{2h}\right)\left(\frac{U_{d}^{n+1}+U_{d}^{n}}{2}\right)
\end{pmatrix}
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\left\{ \begin{array}{l}
T_{UG}^{n+\frac{1}{2},i}=-h\lambda\left(\frac{U_{g}^{n+1}+U_{g}^{n}}{2}\right)\sum_{j=-P-i+1}^{-i}g(e^{x_{j}})e^{x_{j}}\\
T_{UD}^{n+\frac{1}{2},i}=-h\lambda\left(\frac{U_{d}^{n+1}+U_{d}^{n}}{2}\right)\sum_{j=I-i+1}^{P+I-i}g(e^{x_{j}})e^{x_{j}}
\end{array}\right.
\]

\end_inset


\end_layout

\begin_layout Standard
Notice that A and G remain the same as in section ().
\end_layout

\begin_layout Standard
In order to resolve our Crank-Nicolson's Scheme we use the following equation:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray*}
U^{n+1}=\left(1+\frac{\tau}{2}(A+G)\right)^{-1}\left(1-\frac{\tau}{2}(A+G)\right)U^{n}-\tau q_{n+\frac{1}{2}}-\tau T_{UG}^{n+\frac{1}{2},i}-\tau T_{UD}^{n+\frac{1}{2},i}
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace medskip
\end_inset


\end_layout

\begin_layout Subsection
Extension to the American Option
\end_layout

\begin_layout Standard
In this section we will describe how to extend and implement the ideas presented
 thus far to the case of American options.
 In this purpose we adopt the following definitions and notations :
\end_layout

\begin_layout Standard
The value an American style option where the holder of the contract can
 exercise at any time and receive a payoff of 
\begin_inset Formula $u(t,x)=V(t,S)=V(T-t,Ke^{x})$
\end_inset

.
\end_layout

\begin_layout Standard
Using our precedents results we, this problem can be seen as the differential
 linear equation with obstacle : 
\begin_inset Formula 
\[
\left\{ \begin{array}{l}
\min\left(\frac{\partial u}{\partial t}(t,x)-\frac{\sigma^{2}}{2}\frac{\partial^{2}u}{\partial x^{2}}(t,x)-(r-\lambda\kappa+\frac{\sigma^{2}}{2})\frac{\partial u}{\partial x}(t,x)+(r+\lambda)u(t,x)-\lambda L'(u(t,x)),\ u(t,x)-\varphi(t,x)\right)=0\\
\forall x\in\mathbb{R},\quad\forall t\in[0,T]\\
ug(t,x)=a(t)Ke^{x}+b(t)\qquad\forall x\leq Xmin=log(\frac{Smin}{K})\\
ud(t,x)=0\qquad\forall x\geq Xmax=log(\frac{Smax}{K})\\
u(0,x)=\varphi(S)=\varphi(Ke^{x})
\end{array}\right.
\]

\end_inset


\end_layout

\begin_layout Standard
where 
\begin_inset Formula $u\rightarrow L'(u(t,x))$
\end_inset

 is an linear operator described as follows: 
\begin_inset Formula 
\begin{eqnarray*}
L'(u(t,x))=\int_{-\infty}^{+\infty}u(t,x+y)g(e^{y})e^{y}\,dy
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Standard
Using Explicit Euler's Discretization Scheme (with the convention 
\begin_inset Formula $u(t_{n},x_{i})=u_{i}^{n}$
\end_inset

 and 
\begin_inset Formula $\varphi(x_{i})=\varphi_{i}$
\end_inset

) results and established integral aapproximation we derrive the following
 Explicit Euler's Scheme for Americain options:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\begin{split}\min(\frac{u_{i}^{n+1}-u_{i}^{n}}{\tau}-\frac{\sigma^{2}}{2}\left(\frac{u_{i+1}^{n}-2u_{i}^{n}+u_{i-1}^{n}}{h^{2}}\right)-\left(r-\lambda\kappa+\frac{\sigma^{2}}{2}\right)\left(\frac{u_{i+1}^{n}-u_{i-1}^{n}}{2h}\right)+(r+\lambda)u_{i}^{n}-\\
-h\lambda\sum_{j=-P-i+1}^{P+I-i}u_{i+j}^{n}g(e^{x_{j}})e^{x_{j}},\ u_{i}^{n+1}-\varphi_{i})=0
\end{split}
\]

\end_inset


\end_layout

\begin_layout Standard
In order to make this problem easier to resolve and for better overall visibilit
y we adopt the following matrix expression of our Euler's scheme:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray*}
\min\left[\frac{U^{n+1}-U^{n}}{\tau}+(A+G)U^{n}+q_{n}+T_{UG}^{n,i}+T_{UD}^{n,i},\ U^{n+1}-\varphi_{i}\right]=0
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Standard
Which becomesexplicitelly :
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray*}
U^{n+1}=\max\left[\left((1-\tau(A+G))U^{n}-\tau q_{n}-\tau T_{UG}^{n,i}-\tau T_{UD}^{n,i}\right),\ \varphi_{i}\right]
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Standard
Using Crank-Nicolson's Discretization Scheme results we can directly derrive
 the following matrix Crank-Nicolson's Scheme for Americain options:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray*}
\min\left[\frac{U^{n+1}-U^{n}}{\tau}+\frac{((A+G)U^{n+1}+q_{n+1})+((A+G)U^{n}+q_{n})+(T_{UG}^{n+1,i}+T_{UG}^{n,i})+(T_{UD}^{n+1,i}+T_{UD}^{n,i})}{2},\ U^{n+1}-\varphi_{i}\right]=0
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Standard
Which becomes explicitelly :
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray*}
U^{n+1}=\max\left[\left(1+\frac{\tau}{2}(A+G)\right)^{-1}\left(1-\frac{\tau}{2}(A+G)\right)U^{n}-\tau q_{n+\frac{1}{2}}-\tau T_{UG}^{n+\frac{1}{2},i}-\tau T_{UD}^{n+\frac{1}{2},i},\ \varphi_{i}\right]
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Standard
The algorithm has initially been introduced by Brennan and Schwartz).
 The idea is to write a decomposition of the form 
\begin_inset Formula $B=UL$
\end_inset

 where : 
\end_layout

\begin_layout Standard
We remark that both problems can be seen as a $
\backslash
min (Bx-b,x-
\backslash
varphi)=0$ equation to solve.
 There exists a direct method for solving this equation, when the solution
 x has a particular ”shape” (In the case of the american put with one asset,
 and for a finite element approach, see the reference of Jaillet, Lamberton
 and Lapeyere (1990).
 The algorithm has initially been introduced by Brennan and Schwartz).
 The idea is to write a decomposition of the form
\color yellow
 B = UL 
\color inherit
where :
\end_layout

\begin_layout Itemize
\begin_inset Formula $L$
\end_inset

: lower triangular matrix, 
\end_layout

\begin_layout Itemize
\begin_inset Formula $U$
\end_inset

: upper triangular matrix, with 
\begin_inset Formula $U_{ii}=1$
\end_inset

, 
\begin_inset Formula $\forall i$
\end_inset

 
\end_layout

\begin_layout Standard
In order to apply Brennan and Schwartz algorithm we sould use the following
 equivalence :
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\min(ULx-b,x-\varphi)\Longleftrightarrow\min(Lx-U^{-1}b,x-\varphi)
\]

\end_inset


\end_layout

\begin_layout Standard
If we define 
\begin_inset Formula $c=U^{-1}b$
\end_inset

, we just have to solve 
\begin_inset Formula $\min(ULx-b,x-\varphi)$
\end_inset

 using Brennan and Schwartz's algorithm.
\end_layout

\begin_layout Standard
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
We want to apply a Newton type algorithm for solving 
\begin_inset Formula $F(x)=0$
\end_inset

 with 
\begin_inset Formula $F(x):=\min(Bx-b,x-\varphi)$
\end_inset

.
\end_layout

\begin_layout Standard
We consider the following algorithm: iterate over 
\begin_inset Formula $k\geq0$
\end_inset

 (for a given 
\begin_inset Formula $x_{0}$
\end_inset

 starting point of 
\begin_inset Formula $\mathbb{R}_{I}$
\end_inset

, to be choosen).
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
x_{k+1}=x_{k}-\frac{F(x_{k})}{F'(x_{k})}
\]

\end_inset


\end_layout

\begin_layout Standard
until 
\begin_inset Formula $F(x_{k})=0$
\end_inset

 (or, that 
\begin_inset Formula $x_{k+1}=x_{k}$
\end_inset

).
 We will take the following definition for 
\begin_inset Formula $F(x_{k})$
\end_inset

 (rwo by row derivative):
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
F'(x_{k})_{i,j}=\left\{ \begin{array}{l}
B_{i,j}\qquad if\ (Bx_{k}-b)_{i}\leq(x_{k}-\varphi)_{i}\\
\delta_{i,j}\qquad otherwise.
\end{array}\right.
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace medskip
\end_inset


\end_layout

\begin_layout Standard

\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "mainarticle"

\end_inset

 
\shape smallcaps
Y.
 d'Halluin, P.A.
 Forsyth, K.R.
 Vetzal
\shape default
, 
\shape italic
Robust numerical methods for contingent claims under jump diffusion processes
\shape default
,
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "duffy"

\end_inset

 
\shape smallcaps
R.C.
 Merton
\shape default
, 
\shape italic
Option pricing when underlying stock returns are disconti- nuous.
 Journal of Financial Economics
\shape default
,
\end_layout

\end_body
\end_document
